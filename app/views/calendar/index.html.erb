<!-- TODO: when there are more than 5 events in one slot. Other events positioned on the same top height, which stops them being at their place -->
<% aws_name = "https://s3-ap-southeast-2.amazonaws.com/my-truck-fleet" %>
<div class='row'>
	<div class='span4'>
		<div class="reddish-border">
			<div class='highlight-red'>
				<span class="inline-header-count-number-red"><%= @overdue.present? ? @overdue.count : "0" %></span> Overdue vehicles
			</div>
			<% # TODO refactor due and overdue => replication %>
			<div class='overdue-body'>
				<% @overdue.each do |overdue| %>
			      <div class='overdue-item'>
					<% if (defined? overdue.service_type) %>
			      	<div style="float: left;">	
			      		<%= link_to overdue.fleet.name, fleet_path(overdue.fleet) %>
						<!-- Displays overdue services or Major Fault Book records  -->
				        <%= overdue.service_type.name %>
				        </div>
				        <div class="right">
				        	<%= link_to 'B', new_service_path(
				        		:year => Date.today.year,
				        		:month => Date.today.month,
				        		:day => Date.today.day,
				        		:hours =>  Time.now.hour,
										:service => overdue,
				        	), :class => 'btn btn-mini btn-success' %>
                			<%= link_to 'P', postpone_fleet_path(
	                      		overdue.fleet,
	                      		:service_id => overdue.service_type.id),
			                  	:class => 'btn btn-mini btn-warning' %>
                			<%= link_to 'C', cancel_fleet_path(
                				overdue.fleet,
                				:service_id => overdue.service_type.id),
                				:class => 'btn btn-mini btn-danger' %>
			          </div>
			    	<div style="clear:both;"></div>
					<% else %>
						<%= link_to overdue.fleet.name, fleet_path(overdue.fleet) %>
						<%= link_to 'Major fault', fault_book_path(overdue) %>
						<div class="right">
							<%= link_to 'B', new_service_path(
				        		:year => Date.today.year,
				        		:month => Date.today.month,
				        		:day => Date.today.day,
				        		:hours =>  Time.now.hour,
										:type => :fault,
										:fault_book => overdue.id,
				        	), :class => 'btn btn-mini btn-success' %>
                			<%= link_to 'P', postpone_fault_book_path(
	                      		overdue.fleet,
	                      		:fault_book => overdue),
			                  	:class => 'btn btn-mini btn-warning' %>
												  <%= link_to 'C',
												              fault_book_path(overdue, :from_calendar => true),
												              :method => 'delete',
												              :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
												              :class => 'btn btn-mini btn-danger' %>
						</div>
					<% end %>
		      	</div>
			    <% end if @overdue.present? %>
			</div>
		</div>
		<div class="yellowish-border">
			<div class='highlight-yellow'>
				<span class="inline-header-count-number-orange"><%= @due.present? ? @due.count : "0" %></span> 
				Due vehicles
			</div>
			<div class='overdue-body'>
				<% @due.each do |due| %>
			      	<div class='overdue-item'>
						<% if (defined? due.service_type) %>
						<div style="float: left;">
			      			<%= link_to due.fleet.name, fleet_path(due.fleet) %>
							<!-- 
								TODO refactor this: too much of repetitoins, 
								for example due and fault book minor do the same stuff 
								probably data structure is wrong in this pattern 
							-->
							<% fault_book_item = link_to due.fault_type, fault_book_path(due) if !(defined? due.service_type)%>
							<%= (defined? due.service_type) ? due.service_type.name : fault_book_item %>
						</div>
				        <div class="right">
				        	<%= link_to 'B', new_service_path(
				        		:year => Date.today.year,
				        		:month => Date.today.month,
				        		:day => Date.today.day,
				        		:hours =>  Time.now.hour,
										:type => :fault,
										:fleet_id => due.fleet.id,
										:service_id => due.service_type.id,
										:serviceable => due
				        	),
	                      	  :class => 'btn btn-mini btn-success' %>
	                      	<%= link_to 'P', postpone_fleet_path(
	                      		due.fleet,
	                      		:service_id => due.service_type.id),
			                  		:class => 'btn btn-mini btn-warning' %>
			                <%= link_to 'C', cancel_fleet_path(
	                      		due.fleet,
	                      		:service_id => due.service_type.id),
			                  		:class => 'btn btn-mini btn-danger' %>
			            </div>
						<div style="clear:both;"></div>
						<% else %>
							<%= link_to due.fleet.name, fleet_path(due.fleet) %> -
							<%= link_to 'Minor fault', fault_book_path(due) %>
							<div class="right">
								<!-- TODO make a fault to be hiddable, as it's the best practice to destroy it -->
								<%= link_to 'B', new_service_path(
					        		:year => Date.today.year,
					        		:month => Date.today.month,
					        		:day => Date.today.day,
					        		:hours =>  Time.now.hour,
											:type => :fault,
											:fleet_id => due.fleet.id,
											:fault_book => due.id
					        	), :class => 'btn btn-mini btn-success' %>
	                			<%= link_to 'P', postpone_fault_book_path(
		                      		due.fleet,
		                      		:fault_book => due),
				                  	:class => 'btn btn-mini btn-warning'
				 				%>
	                			<%#= link_to 'C', cancel_fault_book_path(
	                				due.fleet,
	                				:fault_book => due,
									:type => :fault),
	                				:class => 'btn btn-mini btn-danger'
	 							%>
							  <%= link_to 'C',
							              fault_book_path(due, :from_calendar => true),
							              :method => 'delete',
							              :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
							              :class => 'btn btn-mini btn-danger' %>
							</div>
						<% end %>
		             </div>
			    <% end if @due.present? %>
			</div>
		</div>
	</div>
	<div class='span8'>
		<div id='id-calendar'></div><br /><br />
	</div>
</div>
<div class='row'>
	<div id='id-repairers-list' class='span8'>
		<div class="bluish-border">
			<div class='highlight-blue'>
				<span class="inline-header-count-number-blue"><%= @trucks.count %></span> MyFleets 
			</div>
			<div class='overdue-body'>
				<% @trucks.each do |k, tf| %>
				<div class='dropable-truck-fleet-class'>
					<%= k.trading_name_of_business.first(20) %><%= ".." if k.trading_name_of_business.size > 20 %> <span id='id-arrow-down-truck-fleet'>&#x25BC;</span>
				<div class="truck-fleet-elements open">
					<% tf.each do |t| %>
						<%= link_to fleet_path(t) do %>
							<div class='external-event'>
						  		<%= image_tag t.avatar.url, :size => '24x24', :class => 'width-30' if t.avatar.present? %>
						  		<%= image_tag "Vehicles/#{t.vehicle_type}.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.present? && !t.avatar.present? %>
						  		<%= image_tag "Vehicles/Truck.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.nil? && !t.avatar.present? %> | 
						  		<%= t.name %>
							</div>
						<% end %>
					<% end %>
					</div>
				</div>
				<% end if current_user.admin? %>
				<% @trucks.each do |t| %>
					<%= link_to fleet_path(t) do %>
				  		<div class='external-event'>
				  			<%= image_tag t.avatar.url, :size => '24x24', :class => 'width-30' if t.avatar.present? %>
				  			<%= image_tag "Vehicles/#{t.vehicle_type}.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.present? && !t.avatar.present? %>
				  			<%= image_tag "Vehicles/Truck.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.nil? && !t.avatar.present? %> | 
				  			<%= t.send t.truck_fleet.setting.truck_identification.downcase %>
				  		</div>
					<% end %>
				<% end if @trucks.present? if !current_user.admin? %>
			</div>
		</div>
	</div>
	<div id='id-trucks-list' class='span4'>
		<div class="bluish-border">
			<div class='highlight-blue'>
				<span class="inline-header-count-number-blue"><%= @repairers.count %></span> MyRepairer
			</div>
			<div class='overdue-body'>
				<% @repairers.each do |r| %>
					<%= link_to repairer_path(r) do %>
						<div class='external-event'>
							<% if r.avatar.file? %>
							  <%= image_tag r.avatar.url, :size => '16x16', :class => 'width-30' %>
							<% else %> 
							  <%= image_tag "#{aws_name}/pin-2.png", :size => '14x14', :class => 'width-30' %>
							<% end %>
					  		| <%= r.business_name %>
					  	</div>
					<% end %>
				<% end %>

			</div>
		</div>
	</div>
</div>
<script type="text/javascript" charset="utf-8">
$(document).ready(function() {
	
  var startDate;
  var myTeamLink = $('#id-my-team-link');
  var myTeam = $('#id-my-team');
  var myTeamArrow = $('#id-my-team-arrow');
  var dueHeader = $("#id-due-open");
  var dueItems = $("#id-due-items");
  var overdueHeader = $("#id-overdue-open");
  var overdueItems = $("#id-overdue-items");
  
  myTeam.hide();
  // dueItems.hide();
  dueHeader.click(function(){
  	dueItems.toggle("slow");
  });
  overdueHeader.click(function(){
  	overdueItems.toggle("slow");
  });
  
  myTeamLink.click(function(){
  	if (myTeamArrow.hasClass('open')){
  		myTeamLink.html('Display MyTeam');
  		myTeamArrow.removeClass('open');
  		myTeamArrow.html('&#x25BC;');
  	} else {
  		myTeamLink.html('Hide MyTeam');
  		myTeamArrow.addClass('open');
  		myTeamArrow.html('&#x25B2;');
  		
  	}	
  	myTeam.toggle('slow');
  });
 
  startDate = function() {
    var day, today;
    today = new Date();
    day = today.getDay();
    switch (day - 2) {
      case -1:
        return 6;
      case -2:
        return 5;
      default:
        return day - 2;
    }
  };
  
  daysAgo = function(day) {
    // alert("Start day: " + startDate());
    //     alert(day);
    // sunday start
    if (startDate() == 0) {
      if ((7 - day) == 0) { return 0 };
      if ((7 - day) == 6) { return 1 };
      if ((7 - day) == 5) { return 2 };
      if ((7 - day) == 4) { return 3 };
      if ((7 - day) == 3) { return 4 };
      if ((7 - day) == 2) { return 5 };
      if ((7 - day) == 1) { return 6 };
    }
    
    // saturday start
    if (startDate() == 6) {
      if ((7 - day) == 1) { return 0 };
      if ((7 - day) == 7) { return 1 };
      if ((7 - day) == 6) { return 2 };
      if ((7 - day) == 5) { return 3 };
      if ((7 - day) == 4) { return 4 };
      if ((7 - day) == 3) { return 5 };
      if ((7 - day) == 2) { return 6 };
    }
    
    // monday start
    if (startDate() == 1) {
      if ((7 - day) == 0) { return 6 };
      if ((7 - day) == 1) { return 5 };
      if ((7 - day) == 2) { return 4 };
      if ((7 - day) == 3) { return 3 };
      if ((7 - day) == 4) { return 2 };
      if ((7 - day) == 5) { return 1 };
      if ((7 - day) == 6) { return 0 };
    }
    
    // tuesday start
    if (startDate() == 2) {
      if ((7 - day) == 5) { return 0 };
      if ((7 - day) == 4) { return 1 };
      if ((7 - day) == 3) { return 2 };
      if ((7 - day) == 2) { return 3 };
      if ((7 - day) == 1) { return 4 };
      if ((7 - day) == 0) { return 5 };
      if ((7 - day) == 6) { return 6 };
    }
    
    // wednesday start
    if (startDate() == 3) {
      if ((7 - day) == 4) { return 0 };
      if ((7 - day) == 3) { return 1 };
      if ((7 - day) == 2) { return 2 };
      if ((7 - day) == 1) { return 3 };
      if ((7 - day) == 0) { return 4 };
      if ((7 - day) == 6) { return 5 };
      if ((7 - day) == 5) { return 6 };
    }
    
    // thursday start
    if (startDate() == 4) {
      if ((7 - day) == 3) { return 0 };
      if ((7 - day) == 2) { return 1 };
      if ((7 - day) == 1) { return 2 };
      if ((7 - day) == 0) { return 3 };
      if ((7 - day) == 6) { return 4 };
      if ((7 - day) == 5) { return 5 };
      if ((7 - day) == 4) { return 6 };
    }
    
    // friday start
    if (startDate() == 5) {
      if ((7 - day) == 2) { return 1 };
      if ((7 - day) == 1) { return 2 };
      if ((7 - day) == 0) { return 3 };
      if ((7 - day) == 6) { return 4 };
      if ((7 - day) == 5) { return 5 };
      if ((7 - day) == 4) { return 6 };
    }
  };
  
  $(".dropable-truck-fleet-class").click(function(){
  	if ($(this).find('div').hasClass('open')){
  		$(this).find('span').html("&#x25B2;");
  		$(this).find('div').toggle("slow").removeClass('open').addClass('closed'); //.toggle('slow')
  	} else {
  		$(this).find('span').html("&#x25BC;");
  		$(this).find('div').toggle("slow").removeClass('closed').addClass('open'); //.toggle('slow')
  	};
  });

	function createCookie(name,value,days) {
	    if (days) {
	        var date = new Date();
	        date.setTime(date.getTime()+(days*24*60*60*1000));
	        var expires = "; expires="+date.toGMTString();
	    }
	    else var expires = "";
	    document.cookie = name+"="+value+expires;
	}

	function readCookie(name) {
	    var nameEQ = name + "=";
	    var ca = document.cookie.split(';');
	    for(var i=0;i < ca.length;i++) {
	        var c = ca[i];
	        while (c.charAt(0)==' ') c = c.substring(1,c.length);
	        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	    }
	    return null;
	}

	function eraseCookie(name) {
	    createCookie(name,"",-1);
	}
  agendaWeek = function() {
		var view = readCookie("calendarView");
		if (!view) view = "agendaWeek"
  	return view;
  };
  
  $('#id-calendar').fullCalendar({
    aspectRatio: 0.5,
    defaultView: agendaWeek(),
    slotMinutes: 120,
    height: 650,
    titleFormat: {
	    month: 'MMMM yyyy',
	    week: "d[ MMMM]{ - d MMMM}",
			day: 'd MMMM'
		},
		header: {
			left: 'prev,next today',
			center: 'title',
			right: 'month,basicWeek,basicDay'
	},
	viewDisplay: function(view) {
		eraseCookie("calendarView");
		if (view.name === 'basicDay'){
			$('#id-calendar').fullCalendar('changeView', 'agendaDay');
			createCookie("calendarView", "agendaDay", 7);
		}
		if (view.name === 'basicWeek'){
			$('#id-calendar').fullCalendar('changeView', 'agendaWeek');
			createCookie("calendarView", "agendaWeek", 7);
		}
		if (view.name == 'month'){
			createCookie("calendarView", "month", 7);
		}
	},
    minTime: 8,
    maxTime: 20,
    firstDay: startDate(),
	events: [
	<% @services.each do |s| %>
		{
			id: <%= s.id %>,
			title: '<%= s.fleet.name %>',
			description: "<%= s.service_type %>",
			color: function(){
				if (<%= s.start_service_date.nil? ? false : s.start_service_date < Date.today %>)
				  return ''
				else if (<%= s.start_service_date.nil? ? false : s.start_service_date >= Date.today && s.start_service_date <= Date.today + 3 %>) return ''
				else return ''
			}(),			
			start: '<%= s.start_service_date %> <%= s.start_service_time.hour.to_s + ':00:00' if !s.start_service_time.nil? %>',
			end: '<%= s.start_service_date %> <%= s.finish_service_time.hour.to_s + ':00:00' if !s.finish_service_time.nil? %>',
			allDay: false
		},
	<% end if @services.present? %>
	],
	eventRender: function( event, element, view ) { 
	  console.log(view)
	  if (view.name == "agendaWeek") {
	    var events = $('#id-calendar').fullCalendar('clientEvents');
  	  $(element).css("width", 100);

  	  $(element).attr("id", event.id);
  	  hash = {};
  	  var left = "";
      for (i in events) {
        var date = new Date(events[i].start);
        if (events[i].start in hash) {
          hash[events[i].start] = hash[events[i].start] + 1;

          if (events[i].id == event.id) { 
            switch (daysAgo(event.start.getDay())) {
              case 0:
                $(element).css("left", 61.99);
                break;
              case 1:
                $(element).css("left", 162.02);
                break;
              case 2:
                $(element).css("left", 256.44);
                break;
              case 3:
                $(element).css("left", 353.10);
                break;
              case 4:
                $(element).css("left", 449.77);
                break;
              case 5:
                $(element).css("left", 546.77);
                break;
              case 6:
                $(element).css("left", 644.77);
                break;
            }
          };

          if (events[i].id == $(element).attr("id")) { 
            var orig_top = $(element).css("top").replace ( /[^\d.]/g, '' );
            orig_top = parseInt(orig_top);
            var top = orig_top + (15 * hash[events[i].start]);
            $(element).css("top", top);


          }
        } else {
          hash[events[i].start] = 0;
          var id = "#" + events[i].id;
          left = $(id).css("left");
          if (events[i].id == event.id) { 
            switch (daysAgo(event.start.getDay())) {
              case 0:
                $(element).css("left", 61.99);
                break;
              case 1:
                $(element).css("left", 162.02);
                break;
              case 2:
                $(element).css("left", 256.44);
                break;
              case 3:
                $(element).css("left", 353.10);
                break;
              case 4:
                $(element).css("left", 449.77);
                break;
              case 5:
                $(element).css("left", 546.77);
                break;
              case 6:
                $(element).css("left", 644.77);
                break;
            }
          };
        }
      };
	  };
	  
    $(".fc-event-time").addClass("ml10");
    $(element).parent().parent().addClass("v-align-m");
    $(".fc-event").removeClass("fc-event")
    $(".fc-event-skin").removeClass("fc-event-skin");
    $(".fc-event-vert").removeClass("fc-event-vert");
    $(".fc-corner-top").removeClass("fc-corner-top");
    $(".fc-corner-bottom").removeClass("fc-corner-bottom");
    
    console.log();
    
     if (isFutureDate(event.start)) {
       $(element).addClass("mtf-event-future");
     } else {
       $(element).addClass("mtf-event-past");
     }
    
    
    // TODO: check out the month view
    // TODO: check out the week view
	  
	},
	eventClick: function(event, jsEvent, view){
		cuteLittleWindow = window.open("/services/" + event.id + "/edit",
			"littleWindow", "location=no,width=850,height=650,left=300");
	},

	dayClick: function(date, allDay, jsEvent, view){
		m = date.getMonth() + 1;
		suffix = (date.getHours >= 12)? 'pm' : 'am';
		cuteLittleWindow = window.open("/services/new.html" + '?' + 
		'year='  + date.getFullYear() + '&' + 
		'month=' + m + '&' + 
		'day='   + date.getDate() + '&' + 
		'suffix=' + suffix + '&' +
		'hours=' + date.getHours(), "littleWindow", "location=no,width=850,height=650,left=300"); 
	}
  });
  var $fcRightButtons = $('.fc-header-right [class*="fc-button"]').addClass('btn btn-primary').removeClass('fc-button-basicDay fc-state-default fc-corner-right')
  var $fcLeftButtons = $('.fc-header-left [class*="fc-button"]').addClass('btn btn-primary').removeClass('fc-button-basicDay fc-state-default fc-corner-right')
  
  	$fcRightButtons.click(function(el) {
  		$fcRightButtons.addClass('btn-primary').removeClass('btn-warning');
  		$(this).addClass('btn-warning').removeClass('btn-primary');
  		var $fcAgendaAxis  = $('#id-calendar .fc-view-agendaDay .fc-agenda-axis')
  		var $fcDaysOfMonth = $('#id-calendar .fc-view-month .fc-widget-content')
  		
  		$fcAgendaAxis.each (function(i, time){
  			i > 0 ? $(time).addClass("bg-white") : undefined;
  		});
  		$fcDaysOfMonth.each (function(i, dayOfMonth){
  			$(dayOfMonth).hasClass('fc-other-month') ? $(dayOfMonth).addClass("bg-white") : $(dayOfMonth).addClass("current-month")
  		});
  	})
  
  var $oldRightTable = $('.fc-header-right > table');
  var $oldLeftTable = $('.fc-header-left > table');
	$('<div>')
	  .addClass('btn-group')
	  .attr("data-toggle", "buttons-radio")
	  .appendTo('.fc-header-right')
	  .append($fcRightButtons);
	$('<div>')
	  .addClass('btn-group')
	  .appendTo('.fc-header-left')
	  .append($fcLeftButtons);
	
	$oldRightTable.remove();
	$oldLeftTable.remove();
	
  var $fcCalendarBody = $('#id-calendar .fc-border-separate tbody');
  $fcCalendarBody.addClass("bg-white");
  
  var hash = {};
  
  // hacking events on the calendar
  /************************************************************************/
  var events = $('#id-calendar').fullCalendar('clientEvents');
  for (i in events) {
    var date = new Date(events[i].start);
    if (events[i].start in hash) { 
      hash[events[i].start] = hash[events[i].start] + 1;
      var HH = date.getHours();
      if (HH >= 8 && HH < 10) {
        var position = 1;
        
        // position of an event on the calendar slot, 
        // this number depends on the number of events in the slot, the more events the bigger the number
        position = position + 1;
        events[i].position = position;
      }
    } else {
      hash[events[i].start] = 1;
    }
  };
  var hourly_hash = {};
  var hourly_events = {};
  for (i in hash) {
    var date = new Date(i); 
    if (date.getHours() in hourly_hash) { 
      if (hash[i] > hourly_hash[date.getHours()]) { 
        hourly_hash[date.getHours()] = hash[i];
      } else {}
    } else {
      hourly_hash[date.getHours()] = hash[i];
    }
  };
  for (i in hourly_hash) {
    if (i >= 8 && i < 10 && hourly_hash[i] > 5) { $(".fc-slot0").height(hourly_hash[i] * 20);  } 
    if (i >=10 && i < 12 && hourly_hash[i] > 5) { $(".fc-slot1").height(hourly_hash[i] * 20);  }
    if (i >=12 && i < 14 && hourly_hash[i] > 5) { $(".fc-slot2").height(hourly_hash[i] * 20);  }
    if (i >=14 && i < 16 && hourly_hash[i] > 5) { $(".fc-slot3").height(hourly_hash[i] * 20);  }
    if (i >=16 && i < 18 && hourly_hash[i] > 5) { $(".fc-slot4").height(hourly_hash[i] * 20);  }
    if (i >=18 && i < 20 && hourly_hash[i] > 5) { $(".fc-slot5").height(hourly_hash[i] * 20);  }
  };
  

  
  for (i in events) {
    var ident = events[i].start.getFullYear() + "" + events[i].start.getMonth() + events[i].start.getDate() + events[i].start.getHours();
    
    if(ident in hourly_events) {
      hourly_events.push(event[i]);
    } else {
      hourly_events.ident = [];
      hourly_events.ident.push(event[i]);
      
    }
    if (ident in hourly_events) { hourly_events.ident.push("1"); } else { hourly_events.ident = []; hourly_events.ident.push("1") };
    
    // if events[i].start
    // hourly_events = { : }
    
    
  }
  
  function isFutureDate( date ) {
      var date=new Date(date);
      
      var _now=new Date();
      if( date.getTime() > _now.getTime() )
      {
        return true
      } else { 
        return false 
      }
  }

});
</script>