	<div class="page-content">
		<div class="page-header position-relative">

		</div><!--/.page-header-->

		<div class="row-fluid">
			<div class="span12">
				<!--PAGE CONTENT BEGINS-->

				<div class="row-fluid">
					<div class="span9">
						<div class="space"></div>

						<div id="calendar"></div>
					</div>

					<div class="span3">
						<div class="widget-box transparent">
							<div class="widget-header">
								<h4>Draggable events</h4>
							</div>

							<div class="widget-main">
								<div id="external-events">
									<div class="external-event label-grey" data-class="label-grey">
										<i class="icon-move"></i>
										My Event 1
									</div>

									<div class="external-event label-success" data-class="label-success">
										<i class="icon-move"></i>
										My Event 2
									</div>

									<div class="external-event label-important" data-class="label-important">
										<i class="icon-move"></i>
										My Event 3
									</div>

									<div class="external-event label-purple" data-class="label-purple">
										<i class="icon-move"></i>
										My Event 4
									</div>

									<div class="external-event label-yellow" data-class="label-yellow">
										<i class="icon-move"></i>
										My Event 5
									</div>

									<div class="external-event label-pink" data-class="label-pink">
										<i class="icon-move"></i>
										My Event 6
									</div>

									<div class="external-event label-info" data-class="label-info">
										<i class="icon-move"></i>
										My Event 7
									</div>

									<label>
										<input type="checkbox" class="ace-checkbox" id="drop-remove" />
										<span class="lbl"> Remove after drop</span>
									</label>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!--PAGE CONTENT ENDS-->
			</div><!--/.span-->
		</div><!--/.row-fluid-->
	</div><!--/.page-content-->
<% aws_name = "https://s3-ap-southeast-2.amazonaws.com/my-truck-fleet" %>
<div class='row'>
	<div class='span4'>
		<div class="reddish-border">
			<div class='highlight-red'>
				<span class="inline-header-count-number-red"><%= @overdue.present? ? @overdue.count : "0" %></span> Overdue vehicles
			</div>
			<% # TODO refactor due and overdue => replication %>
			<div class='overdue-body'>
				<% @overdue.each do |overdue| %>
			      
					<% if (defined? overdue.service_type) %>
			      	
			      		<%= link_to overdue.fleet.name, fleet_path(overdue.fleet) %>

				        <%= overdue.service_type.name %>
				        	<%= link_to 'B', new_service_path(:date => Date.today.strftime("%Y-%m-%d-%H"), :serviceable => overdue ), :class => 'btn btn-mini btn-success' %>
                	<%= link_to 'P', postpone_fleet_path(overdue.fleet, :service_id => overdue.service_type.id), :class => 'btn btn-mini btn-warning' %>
                	<%= link_to 'C', cancel_fleet_path(overdue.fleet, :service_id => overdue.service_type.id), :class => 'btn btn-mini btn-danger' %>
			          </div>
			    	<div style="clear:both;"></div>
					<% else %>
						<%= link_to overdue.fleet.name, fleet_path(overdue.fleet) %>
						<%= link_to 'Major fault', fault_book_path(overdue) %>
						<div class="right">
							<%= link_to 'B', new_service_path(
				        		:year => Date.today.year,
				        		:month => Date.today.month,
				        		:day => Date.today.day,
				        		:hours =>  Time.now.hour,
										:type => :fault,
										:fault_book => overdue.id
				        	), :class => 'btn btn-mini btn-success' %>
                			<%= link_to 'P', postpone_fault_book_path(
	                      		overdue.fleet,
	                      		:fault_book => overdue),
			                  	:class => 'btn btn-mini btn-warning' %>
												  <%= link_to 'C',
												              fault_book_path(overdue, :from_calendar => true),
												              :method => 'delete',
												              :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
												              :class => 'btn btn-mini btn-danger' %>
						</div>
					<% end %>
		      	</div>
			    <% end if @overdue.present? %>
			</div>
		</div>
		<div class="yellowish-border">
			<div class='highlight-yellow'>
				<span class="inline-header-count-number-orange"><%= @due.present? ? @due.count : "0" %></span> 
				Due vehicles
			</div>
			<div class='overdue-body'>
				<% @due.each do |due| %>
			      	<div class='overdue-item'>
						<% if (defined? due.service_type) %>
						<div style="float: left;">
			      			<%= link_to due.fleet.name, fleet_path(due.fleet) %>
							<!-- 
								TODO refactor this: too much of repetitoins, 
								for example due and fault book minor do the same stuff 
								probably data structure is wrong in this pattern 
							-->
							<% fault_book_item = link_to due.fault_type, fault_book_path(due) if !(defined? due.service_type)%>
							<%= (defined? due.service_type) ? due.service_type.name : fault_book_item %>
						</div>
				        <div class="right">
				        	<%= link_to 'B', new_service_path(
				        		:year => Date.today.year,
				        		:month => Date.today.month,
				        		:day => Date.today.day,
				        		:hours =>  Time.now.hour,
										:type => :fault,
										:fleet_id => due.fleet.id,
										:service_id => due.service_type.id,
										:serviceable => due
				        	),
	                      	  :class => 'btn btn-mini btn-success' %>
	                      	<%= link_to 'P', postpone_fleet_path(
	                      		due.fleet,
	                      		:service_id => due.service_type.id),
			                  		:class => 'btn btn-mini btn-warning' %>
			                <%= link_to 'C', cancel_fleet_path(
	                      		due.fleet,
	                      		:service_id => due.service_type.id),
			                  		:class => 'btn btn-mini btn-danger' %>
			            </div>
						<div style="clear:both;"></div>
						<% else %>
							<%= link_to due.fleet.name, fleet_path(due.fleet) %> -
							<%= link_to 'Minor fault', fault_book_path(due) %>
							<div class="right">
								<!-- TODO make a fault to be hiddable, as it's the best practice to destroy it -->
								<%= link_to 'B', new_service_path(
					        		:year => Date.today.year,
					        		:month => Date.today.month,
					        		:day => Date.today.day,
					        		:hours =>  Time.now.hour,
											:type => :fault,
											:fleet_id => due.fleet.id,
											:fault_book => due.id
					        	), :class => 'btn btn-mini btn-success' %>
	                			<%= link_to 'P', postpone_fault_book_path(
		                      		due.fleet,
		                      		:fault_book => due),
				                  	:class => 'btn btn-mini btn-warning'
				 				%>
	                			<%#= link_to 'C', cancel_fault_book_path(
	                				due.fleet,
	                				:fault_book => due,
									:type => :fault),
	                				:class => 'btn btn-mini btn-danger'
	 							%>
							  <%= link_to 'C',
							              fault_book_path(due, :from_calendar => true),
							              :method => 'delete',
							              :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
							              :class => 'btn btn-mini btn-danger' %>
							</div>
						<% end %>
		             </div>
			    <% end if @due.present? %>
			</div>
		</div>
	</div>
	<div class='span8'>
		<div id='id-calendar'></div><br /><br />
	</div>
</div>
<div class='row'>
	<div id='id-repairers-list' class='span8'>
		<div class="bluish-border">
			<div class='highlight-blue'>
				<span class="inline-header-count-number-blue"><%= @trucks.count %></span> MyFleets 
			</div>
			<div class='overdue-body'>
				<% @trucks.each do |k, tf| %>
				<div class='dropable-truck-fleet-class'>
					<%= k.trading_name_of_business.first(20) %><%= ".." if k.trading_name_of_business.size > 20 %> <span id='id-arrow-down-truck-fleet'>&#x25BC;</span>
				<div class="truck-fleet-elements open">
					<% tf.each do |t| %>
						<%= link_to fleet_path(t) do %>
							<div class='external-event'>
						  		<%= image_tag t.avatar.url, :size => '24x24', :class => 'width-30' if t.avatar.present? %>
						  		<%= image_tag "Vehicles/#{t.vehicle_type}.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.present? && !t.avatar.present? %>
						  		<%= image_tag "Vehicles/Truck.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.nil? && !t.avatar.present? %> | 
						  		<%= t.name %>
							</div>
						<% end %>
					<% end %>
					</div>
				</div>
				<% end if current_user.admin? %>
				<% @trucks.each do |t| %>
					<%= link_to fleet_path(t) do %>
				  		<div class='external-event'>
				  			<%= image_tag t.avatar.url, :size => '24x24', :class => 'width-30' if t.avatar.present? %>
				  			<%= image_tag "Vehicles/#{t.vehicle_type}.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.present? && !t.avatar.present? %>
				  			<%= image_tag "Vehicles/Truck.png", :size => '24x24', :class => 'width-30' if t.vehicle_type.nil? && !t.avatar.present? %> | 
				  			<%= t.send t.truck_fleet.setting.truck_identification.downcase %>
				  		</div>
					<% end %>
				<% end if @trucks.present? if !current_user.admin? %>
			</div>
		</div>
	</div>
	<div id='id-trucks-list' class='span4'>
		<div class="bluish-border">
			<div class='highlight-blue'>
				<span class="inline-header-count-number-blue"><%= @repairers.count %></span> MyRepairer
			</div>
			<div class='overdue-body'>
				<% @repairers.each do |r| %>
					<%= link_to repairer_path(r) do %>
						<div class='external-event'>
							<% if r.avatar.file? %>
							  <%= image_tag r.avatar.url, :size => '16x16', :class => 'width-30' %>
							<% else %> 
							  <%= image_tag "#{aws_name}/pin-2.png", :size => '14x14', :class => 'width-30' %>
							<% end %>
					  		| <%= r.business_name %>
					  	</div>
					<% end %>
				<% end %>

			</div>
		</div>
	</div>
</div>


<script type="text/javascript" charset="utf-8">
$(document).ready(function() {
  
  			$(function() {

  /* initialize the external events
  	-----------------------------------------------------------------*/

  	$('#external-events div.external-event').each(function() {

  		// create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
  		// it doesn't need to have a start or end
  		var eventObject = {
  			title: $.trim($(this).text()) // use the element's text as the event title
  		};

  		// store the Event Object in the DOM element so we can get to it later
  		$(this).data('eventObject', eventObject);

  		// make the event draggable using jQuery UI
  		$(this).draggable({
  			zIndex: 999,
  			revert: true,      // will cause the event to go back to its
  			revertDuration: 0  //  original position after the drag
  		});

  	});




  	/* initialize the calendar
  	-----------------------------------------------------------------*/

  	var date = new Date();
  	var d = date.getDate();
  	var m = date.getMonth();
  	var y = date.getFullYear();


  	var calendar = $('#calendar').fullCalendar({
  		 buttonText: {
  			prev: '<i class="icon-chevron-left"></i>',
  			next: '<i class="icon-chevron-right"></i>'
  		},

  		header: {
  			left: 'prev,next today',
  			center: 'title',
  			right: 'month,agendaWeek,agendaDay'
  		},
  		events: [
  		{
  			title: 'All Day Event',
  			start: new Date(y, m, 1),
  			className: 'label-important'
  		},
  		{
  			title: 'Long Event',
  			start: new Date(y, m, d-5),
  			end: new Date(y, m, d-2),
  			className: 'label-success'
  		},
  		{
  			title: 'Some Event',
  			start: new Date(y, m, d-3, 16, 0),
  			allDay: false
  		}]
  		,
  		editable: true,
  		droppable: true, // this allows things to be dropped onto the calendar !!!
  		drop: function(date, allDay) { // this function is called when something is dropped

  			// retrieve the dropped element's stored Event Object
  			var originalEventObject = $(this).data('eventObject');
  			var $extraEventClass = $(this).attr('data-class');


  			// we need to copy it, so that multiple events don't have a reference to the same object
  			var copiedEventObject = $.extend({}, originalEventObject);

  			// assign it the date that was reported
  			copiedEventObject.start = date;
  			copiedEventObject.allDay = allDay;
  			if($extraEventClass) copiedEventObject['className'] = [$extraEventClass];

  			// render the event on the calendar
  			// the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
  			$('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

  			// is the "remove after drop" checkbox checked?
  			if ($('#drop-remove').is(':checked')) {
  				// if so, remove the element from the "Draggable Events" list
  				$(this).remove();
  			}

  		}
  		,
  		selectable: true,
  		selectHelper: true,
  		select: function(start, end, allDay) {

  			bootbox.prompt("New Event Title:", function(title) {
  				if (title !== null) {
  					calendar.fullCalendar('renderEvent',
  						{
  							title: title,
  							start: start,
  							end: end,
  							allDay: allDay
  						},
  						true // make the event "stick"
  					);
  				}
  			});


  			calendar.fullCalendar('unselect');

  		}
  		,
  		eventClick: function(calEvent, jsEvent, view) {

  			var form = $("<form class='form-inline'><label>Change event name &nbsp;</label></form>");
  			form.append("<input autocomplete=off type=text value='" + calEvent.title + "' /> ");
  			form.append("<button type='submit' class='btn btn-small btn-success'><i class='icon-ok'></i> Save</button>");

  			var div = bootbox.dialog(form,
  				[
  				{
  					"label" : "<i class='icon-trash'></i> Delete Event",
  					"class" : "btn-small btn-danger",
  					"callback": function() {
  						calendar.fullCalendar('removeEvents' , function(ev){
  							return (ev._id == calEvent._id);
  						})
  					}
  				}
  				,
  				{
  					"label" : "<i class='icon-remove'></i> Close",
  					"class" : "btn-small"
  				}
  				]
  				,
  				{
  					// prompts need a few extra options
  					"onEscape": function(){div.modal("hide");}
  				}
  			);

  			form.on('submit', function(){
  				calEvent.title = form.find("input[type=text]").val();
  				calendar.fullCalendar('updateEvent', calEvent);
  				div.modal("hide");
  				return false;
  			});


  			//console.log(calEvent.id);
  			//console.log(jsEvent);
  			//console.log(view);

  			// change the border color just for fun
  			//$(this).css('border-color', 'red');

  		}

  	});


  });
	
  var startDate;
  var myTeamLink = $('#id-my-team-link');
  var myTeam = $('#id-my-team');
  var myTeamArrow = $('#id-my-team-arrow');
  var dueHeader = $("#id-due-open");
  var dueItems = $("#id-due-items");
  var overdueHeader = $("#id-overdue-open");
  var overdueItems = $("#id-overdue-items");
  
  myTeam.hide();
  // dueItems.hide();
  dueHeader.click(function(){
  	dueItems.toggle("slow");
  });
  overdueHeader.click(function(){
  	overdueItems.toggle("slow");
  });
  
  myTeamLink.click(function(){
  	if (myTeamArrow.hasClass('open')){
  		myTeamLink.html('Display MyTeam');
  		myTeamArrow.removeClass('open');
  		myTeamArrow.html('&#x25BC;');
  	} else {
  		myTeamLink.html('Hide MyTeam');
  		myTeamArrow.addClass('open');
  		myTeamArrow.html('&#x25B2;');
  		
  	}	
  	myTeam.toggle('slow');
  });
 
  startDate = function() {
    var day, today;
    today = new Date();
    day = today.getDay();
    switch (day - 2) {
      case -1:
        return 6;
      case -2:
        return 5;
      default:
        return day - 2;
    }
  };
  
  $(".dropable-truck-fleet-class").click(function(){
  	if ($(this).find('div').hasClass('open')){
  		$(this).find('span').html("&#x25B2;");
  		$(this).find('div').toggle("slow").removeClass('open').addClass('closed'); //.toggle('slow')
  	} else {
  		$(this).find('span').html("&#x25BC;");
  		$(this).find('div').toggle("slow").removeClass('closed').addClass('open'); //.toggle('slow')
  	};
  });

  dateColor = function(past, current, upcoming){
	if (past) return 'red';
	if (current) return 'yellow';
	if (upcoming) return 'green';
  };

	function createCookie(name,value,days) {
	    if (days) {
	        var date = new Date();
	        date.setTime(date.getTime()+(days*24*60*60*1000));
	        var expires = "; expires="+date.toGMTString();
	    }
	    else var expires = "";
	    document.cookie = name+"="+value+expires;
	}

	function readCookie(name) {
	    var nameEQ = name + "=";
	    var ca = document.cookie.split(';');
	    for(var i=0;i < ca.length;i++) {
	        var c = ca[i];
	        while (c.charAt(0)==' ') c = c.substring(1,c.length);
	        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	    }
	    return null;
	}

	function eraseCookie(name) {
	    createCookie(name,"",-1);
	}
  agendaWeek = function() {
		var view = readCookie("calendarView");
		if (!view) view = "agendaWeek"
  	return view;
  };
  
  $('#id-calendar').fullCalendar({
    aspectRatio: 0.5,
    defaultView: agendaWeek(),
    slotMinutes: 120,
    height: 650,
    titleFormat: {
	    month: 'MMMM yyyy',
	    week: "d[ MMMM]{ - d MMMM}",
			day: 'd MMMM'
		},
		header: {
			left: 'prev,next today',
			center: 'title',
			right: 'month,basicWeek,basicDay'
	},
	viewDisplay: function(view){
		eraseCookie("calendarView");
		if (view.name === 'basicDay'){
			$('#id-calendar').fullCalendar('changeView', 'agendaDay');
			createCookie("calendarView", "agendaDay", 7);
		}
		if (view.name === 'basicWeek'){
			$('#id-calendar').fullCalendar('changeView', 'agendaWeek');
			createCookie("calendarView", "agendaWeek", 7);
		}
		if (view.name == 'month'){
			createCookie("calendarView", "month", 7);
		}
	},
    minTime: 8,
    maxTime: 20,
    firstDay: startDate(),
	events: [
	<% @services.each do |s| %>
		{
			id: <%= s.id %>,
			title: '<%= " #{s.fleet.name}" %>',
			description: "<%= s.service_type %>",
			color: function(){
				if (<%= s.start_service_date.nil? ? false : s.start_service_date < Date.today %>)
				  return 'red'
				else if (<%= s.start_service_date.nil? ? false : s.start_service_date >= Date.today && s.start_service_date <= Date.today + 3 %>) return '#8B8989'
				else return 'green'
			}(),			
			start: '<%= s.start_service_date %> <%= s.start_service_time.hour.to_s + ':00:00' if !s.start_service_time.nil? %>',
			end: '<%= s.start_service_date %> <%= s.finish_service_time.hour.to_s + ':00:00' if !s.finish_service_time.nil? %>',
			allDay: false
		},
	<% end if @services.present? %>
	],
	eventRender: function(event, element) { 
		element.find('.fc-event-title').append("<br />" + event.description);
	},
	eventClick: function(event, jsEvent, view){
		cuteLittleWindow = window.open("/services/" + event.id + "/edit",
			"littleWindow", "location=no,width=850,height=650,left=300");
	},
	dayClick: function(date, allDay, jsEvent, view){
		m = date.getMonth() + 1;
		suffix = (date.getHours >= 12)? 'pm' : 'am';
		cuteLittleWindow = window.open("/services/new.html" + '?' + 
		'year='  + date.getFullYear() + '&' + 
		'month=' + m + '&' + 
		'day='   + date.getDate() + '&' + 
		'suffix=' + suffix + '&' +
		'hours=' + date.getHours(), "littleWindow", "location=no,width=850,height=650,left=300"); 
	}
  });
  var $fcRightButtons = $('.fc-header-right [class*="fc-button"]').addClass('btn btn-primary').removeClass('fc-button-basicDay fc-state-default fc-corner-right')
  var $fcLeftButtons = $('.fc-header-left [class*="fc-button"]').addClass('btn btn-primary').removeClass('fc-button-basicDay fc-state-default fc-corner-right')
  
  	$fcRightButtons.click(function(el){
  		$fcRightButtons.addClass('btn-primary').removeClass('btn-warning');
  		$(this).addClass('btn-warning').removeClass('btn-primary');
  		var $fcAgendaAxis  = $('#id-calendar .fc-view-agendaDay .fc-agenda-axis')
  		var $fcDaysOfMonth = $('#id-calendar .fc-view-month .fc-widget-content')
  		
  		$fcAgendaAxis.each (function(i, time){
  			i > 0 ? $(time).addClass("bg-white") : undefined;
  		});
  		$fcDaysOfMonth.each (function(i, dayOfMonth){
  			console.log($(dayOfMonth));
  			$(dayOfMonth).hasClass('fc-other-month') ? $(dayOfMonth).addClass("bg-white") : $(dayOfMonth).addClass("current-month")
  		});
  	})
  
  var $oldRightTable = $('.fc-header-right > table');
  var $oldLeftTable = $('.fc-header-left > table');
	$('<div>')
	  .addClass('btn-group')
	  .attr("data-toggle", "buttons-radio")
	  .appendTo('.fc-header-right')
	  .append($fcRightButtons);
	$('<div>')
	  .addClass('btn-group')
	  .appendTo('.fc-header-left')
	  .append($fcLeftButtons);
	
	$oldRightTable.remove();
	$oldLeftTable.remove();
	
  var $fcCalendarBody = $('#id-calendar .fc-border-separate tbody');
  $fcCalendarBody.addClass("bg-white");
	
});
</script>